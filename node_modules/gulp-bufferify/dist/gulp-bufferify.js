module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = bufferify;

	var _through = __webpack_require__(1);

	var _through2 = _interopRequireDefault(_through);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function bufferify(factory) {
		return _through2.default.obj(function (file, endcoding, callback) {
			if (file.isNull()) {
				return callback(null, file);
			}

			if (file.isStream()) {
				console.log('streaming not supported in gulp-bufferify.');
				return callback();
			}

			if (typeof factory !== 'function') {
				console.log('factory should be a function in gulp-bufferify.');
				return callback(null, file);
			}

			var content = file.contents.toString();
			var length = factory.length;

			if (length >= 4) {
				return factory(content, file, this, callback);
			}

			var result = factory(content, file, this) || content;
			file.contents = new Buffer(result);
			return callback(null, file);
		});
	}

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	module.exports = require("through2");

/***/ })
/******/ ]);